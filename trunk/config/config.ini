
[VBOSettings]
StaticVData = 300000
StaticIndices = 600000
DynamicVData = 100000
DynamicIndices = 200000
StreamVData = 100000
StreamIndices = 200000

########################## MODELS #############################################################

[ModelSettings]
ModelDir = "./resources/models/"

# Ship models & stuff don't need to load/unload in a per-level basis. They can sit around in a VBO waiting to be referenced
# They'll be cheap anyway
# So, load one for now, and anything else afterwards.
# Any object should ask the ModelMgr for the filename, without the extension

PersistentModels = <tri_cruiser4.obj>



########################### TEXTURES ##########################################################

[Texture]
DefaultDir = "./resources/textures/"

[Texture : MemDistribution]
Texture2D = 10
Texture3D = 1
TextureCube = 3

########################### SHADERS + VERTEX ATTRIBUTES #######################################

[Shader]
ShaderDir = "./shaders/"
ShaderFiles = <"UIShader.sh"> 

[Shader : VertexAttribute : Vertex]
Components = 3
Size = 16
Datatype = float

[Shader : VertexAttribute : Normal]
Components = 3
Size = 16
Datatype = float

[Shader : VertexAttribute : Texcoord]
Components = 2
Size = 8
Datatype = float

[Shader : VertexAttribute : GenAttrib1]
Components = 4
Size = 16
Datatype = float

[Shader : VertexAttribute : GenAttrib2]
Components = 4
Size = 16
Datatype = float

[Shader : VertexAttribute : GenAttrib3]
Components = 4
Size = 16
Datatype = float

[Shader : VertexAttribute : GenAttrib4]
Components = 4
Size = 16
Datatype = float

[Shader : VertexAttribute : GenAttrib5]
Components = 4
Size = 16
Datatype = float

################### PARTICLE SYSTEMS ##############################
# First the max total particles for the vbo
[ParticleSystem]
MaxTotalParticles = 50000

# For each PS, specify also variation, so we know how many diff variations to construct
# and select from, afterwards

[ParticleSystem : TestPS]
Variations   = 4
SystemLife   = 100
ParticleLife = 3
ParticleSize = 2
Shader       = "TestPS_Shader"
Texture      = "Flare1_32.sgi" 


################### LEVELS ##############################

# Because we don't know the size of the map we'll load, we can specify a percentage offset 
# in x,y,z, where these can be queried from the terrain
# The " " are put there because of the nature of my parser, it doesn't like parentheses, but
# if these "" are given, it doesn't complain / rearrange the string. So they 
# can be parsed with FromString<VectorWhatever>(string value)

[Level : TestLevel]
PlayerPosOffsetPercent = "( 0.5 , 0.5 , 0.5 )"

# for the moment the light direction is specified in the .ter file,
# but later another one can be made with any info needed ( lightdir, craters, etc)

[Level : TestLevel : Terrain]
Texture = TerraTForm.dds
Data = Terra.ter

